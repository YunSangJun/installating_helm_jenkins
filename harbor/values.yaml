expose:
  # Set the way how to expose the service. Set the type as "ingress",
  # "clusterIP", "nodePort" or "loadBalancer" and fill the information
  # in the corresponding section
  type: loadBalancer
  tls:
    enabled: false
    secret:
      # The name of secret which contains keys named:
      # "tls.crt" - the certificate
      # "tls.key" - the private key
      secretName: ""
  ingress:
    hosts:
      core: core.harbor.domain
      notary: notary.harbor.domain

persistence:
  enabled: true
  persistentVolumeClaim:
    registry:
      accessMode: ReadWriteOnce
      size: 5Gi
    chartmuseum:
      accessMode: ReadWriteOnce
      size: 5Gi
    jobservice:
      accessMode: ReadWriteOnce
      size: 1Gi
    database:
      accessMode: ReadWriteOnce
      size: 1Gi
    redis:
      accessMode: ReadWriteOnce
      size: 1Gi
    trivy:
      accessMode: ReadWriteOnce
      size: 5Gi
      
# The proxy settings for updating trivy vulnerabilities from the Internet and replicating
# artifacts from/to the registries that cannot be reached directly
proxy:
  httpProxy:
  httpsProxy:
  noProxy: 127.0.0.1,localhost,.local,.internal
  components:
    - core
    - jobservice
    - trivy

nginx:
  image:
    repository: goharbor/nginx-photon
    tag: dev
  replicas: 1
  resources:
   requests:
     memory: 256Mi
     cpu: 100m
  nodeSelector: {}
  tolerations: []
  affinity: {}

portal:
  image:
    repository: goharbor/harbor-portal
    tag: dev
  replicas: 1
  resources:
   requests:
     memory: 256Mi
     cpu: 100m
  nodeSelector: {}
  tolerations: []
  affinity: {}

core:
  image:
    repository: goharbor/harbor-core
    tag: dev
  replicas: 1
  resources:
   requests:
     memory: 256Mi
     cpu: 100m
  nodeSelector: {}
  tolerations: []
  affinity: {}  
  
jobservice:
  image:
    repository: goharbor/harbor-jobservice
    tag: dev
  replicas: 1
  maxJobWorkers: 10
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
registry:
  registry:
    image:
      repository: goharbor/registry-photon
      tag: dev
    resources:
     requests:
       memory: 256Mi
       cpu: 100m
  controller:
    image:
      repository: goharbor/harbor-registryctl
      tag: dev
    resources:
     requests:
       memory: 256Mi
       cpu: 100m
  replicas: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
chartmuseum:
  enabled: false
  image:
    repository: goharbor/chartmuseum-photon
    tag: dev
  replicas: 1
  resources:
   requests:
     memory: 256Mi
     cpu: 100m
  nodeSelector: {}
  tolerations: []
  affinity: {}  

trivy:
  enabled: false
  image:
    repository: goharbor/trivy-adapter-photon
    tag: dev
  replicas: 1
  vulnType: "os,library"
  severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"    
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

notary:
  enabled: false
  server:
    image:
      repository: goharbor/notary-server-photon
      tag: dev
    replicas: 1    
    resources:
     requests:
       memory: 256Mi
       cpu: 100m
    nodeSelector: {}
    tolerations: []
    affinity: {}    
  signer:
    image:
      repository: goharbor/notary-signer-photon
      tag: dev
    replicas: 1
    resources:
     requests:
       memory: 256Mi
       cpu: 100m
    nodeSelector: {}
    tolerations: []
    affinity: {}  
  
database:
  type: internal
  internal:
    image:
      repository: goharbor/harbor-db
      tag: dev
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
    nodeSelector: {}
    tolerations: []
    affinity: {}    
  external:
    host: "192.168.0.1"
    port: "5432"
    username: "user"
    password: "password"
    coreDatabase: "registry"
    notaryServerDatabase: "notary_server"
    notarySignerDatabase: "notary_signer"      
  maxIdleConns: 50
  maxOpenConns: 1000     
      
redis:
  type: internal
  internal:
    image:
      repository: goharbor/redis-photon
      tag: dev
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
    nodeSelector: {}
    tolerations: []
    affinity: {}

exporter:
  replicas: 1
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
  image:
    repository: goharbor/harbor-exporter
    tag: dev
  nodeSelector: {}
  tolerations: []
  affinity: {}

metrics:
  enabled: false
